name: Trunk Compute Impacted Targets
author: trunk.io
description: Trunk.io Github Action to Compute and Upload Impacted Targets

inputs:
  trunk-token:
    description:
      Repo or Organization API token used for authentication. Can be found at app.trunk.io.
    required: true
  target-branch:
    description:
      The branch that the Merge Queue merges PRs into. If unspecified, defaults to the repository's
      default branch.
    required: false
  bazel-workspace-path:
    description:
      The path to the bazel WORKSPACE, relative to the root of the git repository. If unspecified,
      defaults to the root of the repository.
    required: false
  verbose:
    description: Whether to enable verbose logging. Defaults to false.
    required: false
  bazel-startup-options:
    description:
      A comma separated list of startup options to pass to Bazel. See
      https://bazel.build/reference/command-line-reference#startup-options for a complete list. If
      unspecified, no startup options are specified.
    required: false
  bazel-path:
    description: A path to the Bazel executable. Defaults to PATH.
    required: false
    default: bazel
  impact-all-filters-path:
    description:
      A path to a list of filters to identify whether `ALL` impacted targets should be considered.
      See https://github.com/dorny/paths-filter/blob/master/.github/filters.yml for an example. If a
      PR changes files in any of these paths, then *any* PRs queued after this one will depend on
      it.
    required: false
    default: ""

runs:
  using: composite
  steps:
    - name: Detect changed paths
      id: detect-changed-paths
      if: ${{ inputs.impact-all-filters-path != '' }}
      # trunk-ignore(semgrep/yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha)
      uses: dorny/paths-filter@v2
      with:
        filters: ${{ inputs.impact-all-filters-path }}

    - name: Prerequisites
      id: prerequisites
      run: ${GITHUB_ACTION_PATH}/src/scripts/prerequisites.sh
      shell: bash
      env:
        DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        TARGET_BRANCH: ${{ inputs.target-branch }}
        PR_BRANCH: ${{ github.ref }}
        WORKSPACE_PATH: ${{ inputs.bazel-workspace-path }}
        BAZEL_PATH: ${{ inputs.bazel-path }}
        IMPACTS_FILTERS_CHANGES: ${{ steps.detect-changed-paths.outputs.changes }}

    - name: Setup jq
      # trunk-ignore(semgrep): Trust third-party action to install JQ. Source code: https://github.com/dcarbone/install-jq-action/
      uses: dcarbone/install-jq-action@v1.0.1

    - name: Install Bazel in PATH
      if: ${{ steps.prerequisites.outputs.requires_default_bazel_installation == 'true' }}
      # trunk-ignore(semgrep): Trust third-party `bazelbuild` GH Action
      uses: bazelbuild/setup-bazelisk@v2

    - name: Compute Impacted Targets
      id: compute-impacted-targets
      run: ${GITHUB_ACTION_PATH}/src/scripts/compute_impacted_targets.sh
      if: ${{ steps.prerequisites.outputs.impacts_all_detected == 'false' }}
      shell: bash
      env:
        MERGE_INSTANCE_BRANCH: ${{ steps.prerequisites.outputs.merge_instance_branch }}
        MERGE_INSTANCE_BRANCH_HEAD_SHA:
          ${{ steps.prerequisites.outputs.merge_instance_branch_head_sha }}
        PR_BRANCH: ${{ steps.prerequisites.outputs.pr_branch }}
        PR_BRANCH_HEAD_SHA: ${{ steps.prerequisites.outputs.pr_branch_head_sha }}
        VERBOSE: ${{ inputs.verbose }}
        WORKSPACE_PATH: ${{ steps.prerequisites.outputs.workspace_path }}
        BAZEL_PATH: ${{ inputs.bazel-path }}
        BAZEL_STARTUP_OPTIONS: ${{ inputs.bazel-startup-options }}

    - name: Upload Impacted Targets
      run: ${GITHUB_ACTION_PATH}/src/scripts/upload_impacted_targets.sh
      shell: bash
      env:
        ACTOR: ${{ github.actor }}
        API_TOKEN: ${{ inputs.trunk-token }}
        REPOSITORY: ${{ github.repository }}
        TARGET_BRANCH: ${{ steps.prerequisites.outputs.merge_instance_branch }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        PR_SHA: ${{ steps.prerequisites.outputs.pr_branch_head_sha }}
        IMPACTED_TARGETS_FILE: ${{ steps.compute-impacted-targets.outputs.impacted_targets_out }}
        IMPACTS_ALL_DETECTED: ${{ steps.prerequisites.outputs.impacts_all_detected }}
